@startuml

package app {
    class Main
    class StateHandler {
        +loop()
        +setState(AbstractState&)
    }
    interface AbstractState {
        {abstract}+AbstractState(StateHandler&)
        {abstract} +cylce()
        {abstract} +enter()
        {abstract} +leave()
    }
    package States {
        class SleepState
        class UpdateState
        class InitState

        UpdateState -u-|> AbstractState
        SleepState -u-|> AbstractState
        InitState -u-|> AbstractState
    }

    Main -> StateHandler
    StateHandler --> AbstractState
}

package Service {
    class FileIO
    class FatFS
    class ServiceInit {
        +do    
    }
    class Display
    class SDCard
    class Debug
    class Sleep

}

package Mcal {

    class Spi 
    class Uart
    class Sleep
    class HalInit
    class Power 
    class Led


}

InitState --> ServiceInit
ServiceInit --> HalInit
UpdateState --> FileIO
UpdateState --> Display
SleepState --> Sleep
FileIO ->FatFS
FatFS --> SDCard
FileIO --> SDCard

Debug --> Uart
Debug --> Led
SDCard --> Spi
Display --> Spi
SDCard --> Power
Display --> Power
Sleep --> Power

@enduml